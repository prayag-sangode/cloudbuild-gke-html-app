steps:
# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'asia-south1-docker.pkg.dev/gcp-cloud-devops-368909/apps-repo/html-app:$SHORT_SHA'
  - '.'
# This step pushes the image to Artifact Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'asia-south1-docker.pkg.dev/gcp-cloud-devops-368909/apps-repo/html-app:$SHORT_SHA'
# [END cloudbuild]

### Build

#  - id: 'build'
#    name: 'gcr.io/cloud-builders/docker'
#    entrypoint: 'bash'
#    args: 
#      - '-c'
#      - |
#          docker build -t gcr.io/gcp-cloud-devops-368909/html-app:${SHORT_SHA} ./src


### Test


### Publish
#  - id: 'publish'
#    name: 'gcr.io/cloud-builders/docker'
#    entrypoint: 'bash'
#    args: 
#      - '-c'
#      - |
#          docker push gcr.io/gcp-cloud-devops-368909/html-app:${SHORT_SHA}

### Deploy
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'deploy'
  #env:
  #  - 'KUBECONFIG=./kube/config'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
         PROJECT=$$(gcloud config get-value core/project)          
         gcloud container clusters get-credentials "gke-cluster" \
           --project "gcp-cloud-devops-368909" \
           --zone "asia-south1-b"  
         sed -i 's|asia-south1-docker.pkg.dev/gcp-cloud-devops-368909/apps-repo/html-app:.*|asia-south1-docker.pkg.dev/gcp-cloud-devops-368909/apps-repo/html-app:${SHORT_SHA}|' deployment.yaml 
      
         kubectl apply -f deployment.yaml

